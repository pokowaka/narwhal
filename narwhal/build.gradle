apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'si.dlabs.soter'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        applicationId 'com.yayaway.narwhal'
        versionCode 1
        versionName '1.0'
        multiDexEnabled false

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        /*
        The Android Testing Support Library collects analytics to continuously improve the testing
        experience. More specifically, it uploads a hash of the package name of the application
        under test for each invocation. If you do not wish to upload this data, you can opt-out by
        passing the following argument to the test runner: disableAnalytics "true".
         */
        testInstrumentationRunnerArguments disableAnalytics: 'true'

        /*
        Uncomment this to pass custom arguments to AndroidJUnitRunner. If uncommented the
        custom argument "argument1" will be passed to AndroidJUnitRunner and make
        AndroidLibraryModuleIntegrationTest fail.
         */
        // testInstrumentationRunnerArgument "argument1", "make_test_fail"
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

        debug {
            testCoverageEnabled = false

            // Uncomment this to run test against a minified version of the production APK
            /*
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            testProguardFile 'proguard-test-rules.txt'
             */
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

repositories {
    jcenter()
}


soter {

    checkstyle {
        enabled true
        uploadReports true
        showViolations true
        toolVersion "6.13"

    }

    findbugs {
        enabled true
        uploadReports true
        reportLevel "low"
    }

    pmd {
        enabled true
    }

}

dependencies {
    checkstyleRules files("${project.rootDir}/config/quality/checkstyle/checkstyle.xml")
    findbugsRules files("${project.rootDir}/config/quality/findbugs/findbugs-filter.xml")
    pmdRules files("${project.rootDir}/config/quality/pmd/pmd-ruleset.xml")
}


dependencies {
    apt 'com.google.dagger:dagger-compiler:2.0'

    compile 'ch.acra:acra:4.6.1'
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.google.dagger:dagger:2.0'
    compile 'com.jakewharton:butterknife:7.0.1'

    // Image libs
    compile 'com.github.bumptech.glide:glide:3.6.1'
    compile 'com.github.bumptech.glide:okhttp-integration:1.3.1@aar'

    // compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.4'
    // compile 'com.squareup.picasso:picasso:2.5.2'

    compile 'in.srain.cube:ultra-ptr:1.0.11'
    compile 'javax.annotation:jsr250-api:1.0'
    compile 'net.pokowaka.jraw:JRAW:0.7.2'
    compile 'org.ocpsoft.prettytime:prettytime:3.2.7.Final'
    compile 'org.slf4j:slf4j-android:1.7.12'

    compile 'com.android.support:appcompat-v7:' + rootProject.ext.supportLibVersion
    compile 'com.android.support:support-v4:' + rootProject.ext.supportLibVersion
    compile 'com.android.support:recyclerview-v7:' + rootProject.ext.supportLibVersion
    compile 'com.android.support:support-annotations:23.1.1'

    // Dependencies for local unit tests
    testCompile 'junit:junit:' + rootProject.ext.junitVersion
    testCompile 'org.mockito:mockito-all:' + rootProject.ext.mockitoVersion
    testCompile 'org.hamcrest:hamcrest-all:' + rootProject.ext.hamcrestVersion

    // Android Testing Support Library's runner and rules
    androidTestCompile 'com.android.support.test:runner:' + rootProject.ext.runnerVersion
    androidTestCompile 'com.android.support.test:rules:' + rootProject.ext.rulesVersion
    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    androidTestCompile 'com.android.support:support-annotations:23.1.1'
    androidTestCompile 'com.google.dagger:dagger:2.0'
    androidTestCompile 'com.google.dagger:dagger-compiler:2.0'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestCompile('org.mockito:mockito-core:' + rootProject.ext.mockitoVersion) {
        exclude module: 'hamcrest-core'
    }

    // Espresso UI Testing
    androidTestCompile 'com.android.support.test.espresso:espresso-core:' + rootProject.ext.espressoVersion

    // Espresso-Contrib, Intents and Web dependencies are not used in this project.
    /*
    androidTestCompile 'com.android.support.test.espresso:espresso-contrib:' + rootProject.ext.espressoVersion
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:' + rootProject.ext.espressoVersion
    androidTestCompile 'com.android.support.test.espresso:espresso-web:' + rootProject.ext.espressoVersion
     */

    // UIAutomator Testing. Learn about this dependency in this projects README file.
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:' + rootProject.ext.uiautomatorVersion
}
